setwd("/Users/alessandro/lab/bushfire/kangarooisland") #mac

#install.packages("raster")
#RStoolbox is a package for remote sensing image processing and analysis, such as calculating spectral indices, principal component transformation, unsupervised and supervised classification or fractional cover analyses.
#install.packages("RStoolbox")
#make use of the library
library(raster)
library(sp)
library(rgdal)

#DOWNLOAD FROM: https://glovis.usgs.gov/app, https://data.gov.au/dataset (for the .shp file)


rlist <- list.files(pattern="LC08_L1TP_098085_20200109_20200114_01_T1_")
#rlist to see the files within it
#we can now make the stack function to connect the images on layers
#
#RGB
KI14012020_b <-raster("LC08_L1TP_098085_20200109_20200114_01_T1_B2.TIF")
KI14012020_g <- raster("LC08_L1TP_098085_20200109_20200114_01_T1_B3.TIF")
KI14012020_r <- raster("LC08_L1TP_098085_20200109_20200114_01_T1_B4.TIF")
KI14012020_nir <-raster("LC08_L1TP_098085_20200109_20200114_01_T1_B5.TIF")
KI14012020_swir <- raster("LC08_L1TP_098085_20200109_20200114_01_T1_B6.TIF")
KI14012020_panchrom <-raster("LC08_L1TP_098085_20200109_20200114_01_T1_B8.TIF")
KI14012020_tirs <-raster("LC08_L1TP_098085_20200109_20200114_01_T1_B10.TIF")


#KI14012020_7bands<- stack(c(KI14012020_b, KI14012020_g,KI14012020_r,KI14012020_nir,KI14012020_swir,KI14012020_panchrom,KI14012020_tirs))
#i cannot do it because KI14012020_panchrom and KI14012020_tirs have different extent from the rest (they all have 30m, panchrom 15m and tirs 100m)

KI14012020_panchrom <- resample(KI14012020_panchrom, KI14012020_swir)
KI14012020_tirs <- resample(KI14012020_tirs, KI14012020_swir)

KI14012020_7bands<- stack(c(KI14012020_b, KI14012020_g,KI14012020_r,KI14012020_nir,KI14012020_swir,KI14012020_panchrom,KI14012020_tirs))
#now it works
##### I save the workspace so I can start from here if I need to: resample is time consuming ####


shp <- shapefile("LANDSCAPE_Biophysical_L3LandZones_GDA2020")

proj4string(KI14012020_7bands)
proj4string(shp)

shp <- spTransform(shp, proj4string(KI14012020_7bands)) 

plot(KI14012020_7bands)
  plot(shp, add=T)

KI14012020_7bands <- mask(crop(KI14012020_7bands, extent(shp)), shp)  

plot(KI14012020_7bands)
  plot(shp, add=T)
  
  
#####three plots highlighting different things (human eye, vegetation, burnt area) with Kangaroo Island isolated from the rest of the map####
par(mfrow=c(3,1))
cl <- colorRampPalette(c('black','grey','light grey'))(100) 
#B1 blue
#B2 green
#B3 red
#B4 NIR
#B5 SWIR
#B6 panchromatic
#B7 TIRS

#as the human eye see it (red-green-blue)
plotRGB(KI14012020_7bands,3,2,1, stretch="lin")

#highlighting hot soil temperature in red (TIRS,r,b)
plotRGB(KI14012020_7bands,7,3,1, stretch="lin")

#highlight the burnt area (SWIR-NIR-red)
plotRGB(KI14012020_7bands,5,4,3, stretch="lin")


######NDVI#######
# Perform raster algebra to calculate a raster of NDVI values
#ndvi <- (infrared - red) / (infrared + red)  #I use NIR instead of infrared
ndvi <- (KI14012020_nir - KI14012020_r) / (KI14012020_nir + KI14012020_r)


#and once again I want to select only the island area
proj4string(ndvi)
proj4string(shp)

shp <- spTransform(shp, proj4string(ndvi)) 

plot(ndvi)
  plot(shp, add=T)

ndvi <- mask(crop(ndvi, extent(shp)), shp)  

plot(ndvi)
  plot(shp, add=T)
  
# Plot the NDVI as a false-color image
palette = colorRampPalette(c("blue", "white", "red"))(256)
plot(ndvi, col=palette)

#NDVI range is between -1 and +1
hist(ndvi, maxpixels = ncell(ndvi))
#i see where to focus the range of colours to better enhance it
breaks <- seq(-0.4, 0.4, 0.1)
palette <- colorRampPalette(c("blue", "white", "red"))(8)
plot(ndvi, breaks=breaks, col=palette)
#################################
